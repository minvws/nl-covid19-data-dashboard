/**
* This file was automatically generated by json-schema-to-typescript.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run 'yarn generate-typescript' to regenerate this file.
*/

export interface Municipal {
  last_generated: string;
  proto_name: string;
  name: string;
  code: string;
  deceased_rivm: GmDeceasedRivm;
  difference: MunicipalDifference;
  hospital_nice: MunicipalHospitalNice;
  tested_overall: MunicipalTestedOverall;
  sewer?: MunicipalSewer;
  sewer_per_installation?: MunicipalSewerPerInstallation;
  vaccine_coverage?: GmVaccineCoverage;
}
export interface GmDeceasedRivm {
  values: GmDeceasedRivmValue[];
  last_value: GmDeceasedRivmValue;
}
export interface GmDeceasedRivmValue {
  covid_daily: number;
  covid_daily_moving_average: number | null;
  covid_total: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface MunicipalDifference {
  tested_overall__infected_per_100k: DifferenceDecimal;
  tested_overall__infected: DifferenceInteger;
  hospital_nice__admissions_on_date_of_reporting: DifferenceInteger;
  sewer__average?: DifferenceDecimal;
  deceased_rivm__covid_daily: DifferenceInteger;
}
export interface DifferenceDecimal {
  old_value: number;
  difference: number;
  old_date_unix: number;
  new_date_unix: number;
}
export interface DifferenceInteger {
  old_value: number;
  difference: number;
  old_date_unix: number;
  new_date_unix: number;
}
export interface MunicipalHospitalNice {
  values: MunicipalHospitalNiceValue[];
  last_value: MunicipalHospitalNiceValue;
}
export interface MunicipalHospitalNiceValue {
  date_unix: number;
  admissions_on_date_of_admission: number;
  admissions_on_date_of_admission_moving_average: number | null;
  admissions_on_date_of_reporting: number;
  date_of_insertion_unix: number;
}
export interface MunicipalTestedOverall {
  values: MunicipalTestedOverallValue[];
  last_value: MunicipalTestedOverallValue;
}
export interface MunicipalTestedOverallValue {
  date_unix: number;
  infected: number;
  infected_per_100k: number;
  infected_per_100k_moving_average?: number | null;
  date_of_insertion_unix: number;
}
export interface MunicipalSewer {
  values: MunicipalSewerValue[];
  last_value: MunicipalSewerValue;
}
export interface MunicipalSewerValue {
  date_start_unix: number;
  date_end_unix: number;
  average: number;
  total_number_of_samples: number;
  sampled_installation_count: number;
  total_installation_count: number;
  date_of_insertion_unix: number;
}
export interface MunicipalSewerPerInstallation {
  values: MunicipalSewerPerInstallationInstallation[];
}
export interface MunicipalSewerPerInstallationInstallation {
  rwzi_awzi_name: string;
  values: MunicipalSewerPerInstallationValue[];
  last_value: MunicipalSewerPerInstallationValue;
}
export interface MunicipalSewerPerInstallationValue {
  date_unix: number;
  rna_normalized: number;
  date_of_insertion_unix: number;
}
export interface GmVaccineCoverage {
  values: GmVaccineCoverageValue[];
  last_value: GmVaccineCoverageValue;
}
export interface GmVaccineCoverageValue {
  partially_vaccinated: number;
  partially_vaccinated_percentage: number;
  fully_vaccinated: number;
  fully_vaccinated_percentage: number;
  partially_or_fully_vaccinated: number;
  date_unix: number;
  date_of_report_unix: number;
  date_of_insertion_unix: number;
}

export interface Municipalities {
  last_generated: string;
  proto_name: "GM_COLLECTION";
  name: string;
  code: string;
  hospital_nice: MunicipalitiesHospitalNice[];
  tested_overall: MunicipalitiesTestedOverall[];
  sewer: MunicipalitiesSewer[];
}
export interface MunicipalitiesHospitalNice {
  date_unix: number;
  gmcode: string;
  admissions_on_date_of_admission: number;
  admissions_on_date_of_reporting: number;
  date_of_insertion_unix: number;
}
export interface MunicipalitiesTestedOverall {
  date_unix: number;
  gmcode: string;
  infected_per_100k: number;
  infected: number;
  date_of_insertion_unix: number;
}
export interface MunicipalitiesSewer {
  date_start_unix: number;
  date_end_unix: number;
  gmcode: string;
  average: number;
  total_installation_count: number;
  date_of_insertion_unix: number;
}

export interface National {
  last_generated: string;
  proto_name: "NL";
  name: string;
  code: string;
  difference: NationalDifference;
  doctor: NationalDoctor;
  downscaling?: NlDownscaling;
  g_number: NlGNumber;
  infectious_people: NationalInfectiousPeople;
  intensive_care_nice: NationalIntensiveCareNice;
  intensive_care_nice_per_age_group: NlIntensiveCareNicePerAgeGroup;
  tested_overall: NationalTestedOverall;
  tested_per_age_group: NlTestedPerAgeGroup;
  reproduction: NationalReproduction;
  sewer: NationalSewer;
  hospital_nice: NationalHospitalNice;
  hospital_nice_per_age_group: NlHospitalNicePerAgeGroup;
  hospital_lcps: NationalHospitalLcps;
  intensive_care_lcps: NationalIntensiveCareLcps;
  tested_ggd_daily: NationalTestedGgdDaily;
  tested_ggd_average: NationalTestedGgdAverage;
  nursing_home: NationalNursingHome;
  disability_care: NationalDisabilityCare;
  behavior: NationalBehavior;
  deceased_rivm: NationalDeceasedRivm;
  deceased_rivm_per_age_group: NlDeceasedRivmPerAgeGroup;
  deceased_cbs: NationalDeceasedCbs;
  elderly_at_home: NationalElderlyAtHome;
  vaccine_support: NlVaccineSupport;
  corona_melder_app: NlCoronaMelderApp;
  vaccine_coverage?: NlVaccineCoverage;
  vaccine_delivery: NlVaccineDelivery;
  vaccine_delivery_estimate: NlVaccineDeliveryEstimate;
  vaccine_delivery_per_supplier: NlVaccineDeliveryPerSupplier;
  vaccine_administered: NlVaccineAdministered;
  vaccine_administered_estimate: NlVaccineAdministeredEstimate;
  vaccine_administered_doctors: NlVaccineAdministeredDoctors;
  vaccine_administered_ggd_ghor: NlVaccineAdministeredGgdGhor;
  vaccine_administered_ggd: NlVaccineAdministeredGgd;
  vaccine_administered_hospitals_and_care_institutions: NlVaccineAdministeredHospitalsAndCareInstitutions;
  vaccine_administered_total: NlVaccineAdministeredTotal;
  vaccine_administered_rate_moving_average: NlVaccineAdministeredRateMovingAverage;
  vaccine_administered_planned: NlVaccineAdministeredPlanned;
  vaccine_coverage_per_age_group?: NlVaccineCoveragePerAgeGroup;
  vaccine_stock: NlVaccineStock;
}
export interface NationalDifference {
  tested_overall__infected_per_100k: DifferenceDecimal;
  tested_overall__infected: DifferenceInteger;
  tested_ggd_daily__tested_total: DifferenceInteger;
  tested_ggd_daily__infected_percentage: DifferenceDecimal;
  tested_ggd_average__tested_total: DifferenceInteger;
  tested_ggd_average__infected_percentage: DifferenceDecimal;
  infectious_people__estimate: DifferenceInteger;
  hospital_nice__admissions_on_date_of_reporting: DifferenceInteger;
  hospital_lcps__beds_occupied_covid: DifferenceInteger;
  intensive_care_nice__admissions_on_date_of_reporting: DifferenceDecimal;
  intensive_care_lcps__beds_occupied_covid: DifferenceInteger;
  doctor__covid_symptoms_per_100k: DifferenceDecimal;
  doctor__covid_symptoms: DifferenceInteger;
  sewer__average: DifferenceDecimal;
  nursing_home__newly_infected_people: DifferenceInteger;
  nursing_home__infected_locations_total: DifferenceInteger;
  nursing_home__deceased_daily: DifferenceInteger;
  reproduction__index_average: DifferenceDecimal;
  corona_melder_app__warned_daily: DifferenceInteger;
  disability_care__newly_infected_people: DifferenceInteger;
  disability_care__infected_locations_total: DifferenceInteger;
  elderly_at_home__positive_tested_daily: DifferenceInteger;
  deceased_rivm__covid_daily: DifferenceInteger;
}
export interface DifferenceDecimal {
  old_value: number;
  difference: number;
  old_date_unix: number;
  new_date_unix: number;
}
export interface DifferenceInteger {
  old_value: number;
  difference: number;
  old_date_unix: number;
  new_date_unix: number;
}
export interface NationalDoctor {
  values: NationalDoctorValue[];
  last_value: NationalDoctorValue;
}
export interface NationalDoctorValue {
  date_start_unix: number;
  date_end_unix: number;
  covid_symptoms_per_100k: number;
  covid_symptoms: number;
  date_of_insertion_unix: number;
}
export interface NlDownscaling {
  is_downscaling_possible: boolean;
  current_level_of_measures: number;
  reproduction_is_below_threshold: boolean;
  reproduction_threshold_value: number;
  reproduction_threshold_day_span: number;
  intensive_care_nice_is_below_threshold: boolean;
  intensive_care_nice_threshold_value: number;
  intensive_care_nice_threshold_day_span: number;
  hospital_nice_is_below_threshold: boolean;
  hospital_nice_threshold_value: number;
  hospital_nice_threshold_day_span: number;
  date_of_insertion_unix: number;
}
export interface NlGNumber {
  values: NlGNumberValue[];
  last_value: NlGNumberValue;
}
export interface NlGNumberValue {
  g_number: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NationalInfectiousPeople {
  values: NationalInfectiousPeopleValue[];
  last_value: NationalInfectiousPeopleValue;
}
export interface NationalInfectiousPeopleValue {
  margin_low: number;
  estimate: number | null;
  margin_high: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NationalIntensiveCareNice {
  values: NationalIntensiveCareNiceValue[];
  last_value: NationalIntensiveCareNiceValue;
}
export interface NationalIntensiveCareNiceValue {
  admissions_on_date_of_admission: number;
  admissions_on_date_of_admission_moving_average: number | null;
  admissions_on_date_of_reporting: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlIntensiveCareNicePerAgeGroup {
  values: NlIntensiveCareNicePerAgeGroupValue[];
  last_value: NlIntensiveCareNicePerAgeGroupValue;
}
export interface NlIntensiveCareNicePerAgeGroupValue {
  admissions_age_0_19_per_million: number;
  admissions_age_20_29_per_million: number;
  admissions_age_30_39_per_million: number;
  admissions_age_40_49_per_million: number;
  admissions_age_50_59_per_million: number;
  admissions_age_60_69_per_million: number;
  admissions_age_70_79_per_million: number;
  admissions_age_80_89_per_million: number;
  admissions_age_90_plus_per_million: number;
  admissions_overall_per_million: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NationalTestedOverall {
  values: NationalTestedOverallValue[];
  last_value: NationalTestedOverallValue;
}
export interface NationalTestedOverallValue {
  infected: number;
  infected_per_100k: number;
  infected_per_100k_moving_average?: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlTestedPerAgeGroup {
  values: NlTestedPerAgeGroupValue[];
  last_value: NlTestedPerAgeGroupValue;
}
export interface NlTestedPerAgeGroupValue {
  infected_age_0_9_per_100k: number;
  infected_age_10_19_per_100k: number;
  infected_age_20_29_per_100k: number;
  infected_age_30_39_per_100k: number;
  infected_age_40_49_per_100k: number;
  infected_age_50_59_per_100k: number;
  infected_age_60_69_per_100k: number;
  infected_age_70_79_per_100k: number;
  infected_age_80_89_per_100k: number;
  infected_age_90_plus_per_100k: number;
  infected_overall_per_100k: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NationalReproduction {
  values: NationalReproductionValue[];
  last_value: NationalReproductionValue;
}
export interface NationalReproductionValue {
  index_low: number | null;
  index_average: number | null;
  index_high: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NationalSewer {
  values: NationalSewerValue[];
  last_value: NationalSewerValue;
}
export interface NationalSewerValue {
  average: number;
  total_number_of_samples: number;
  sampled_installation_count: number;
  total_installation_count: number;
  date_of_insertion_unix: number;
  date_start_unix: number;
  date_end_unix: number;
}
export interface NationalHospitalNice {
  values: NationalHospitalNiceValue[];
  last_value: NationalHospitalNiceValue;
}
export interface NationalHospitalNiceValue {
  admissions_on_date_of_admission: number;
  admissions_on_date_of_admission_moving_average: number | null;
  admissions_on_date_of_reporting: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlHospitalNicePerAgeGroup {
  values: NlHospitalNicePerAgeGroupValue[];
  last_value: NlHospitalNicePerAgeGroupValue;
}
export interface NlHospitalNicePerAgeGroupValue {
  admissions_age_0_19_per_million: number;
  admissions_age_20_29_per_million: number;
  admissions_age_30_39_per_million: number;
  admissions_age_40_49_per_million: number;
  admissions_age_50_59_per_million: number;
  admissions_age_60_69_per_million: number;
  admissions_age_70_79_per_million: number;
  admissions_age_80_89_per_million: number;
  admissions_age_90_plus_per_million: number;
  admissions_overall_per_million: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NationalHospitalLcps {
  values: NationalHospitalLcpsValue[];
  last_value: NationalHospitalLcpsValue;
}
export interface NationalHospitalLcpsValue {
  beds_occupied_covid: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NationalIntensiveCareLcps {
  values: NationalIntensiveCareLcpsValue[];
  last_value: NationalIntensiveCareLcpsValue;
}
export interface NationalIntensiveCareLcpsValue {
  beds_occupied_covid: number | null;
  beds_occupied_non_covid: number | null;
  beds_occupied_covid_percentage: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NationalTestedGgdDaily {
  values: NationalTestedGgdDailyValue[];
  last_value: NationalTestedGgdDailyValue;
}
export interface NationalTestedGgdDailyValue {
  infected: number;
  infected_moving_average?: number | null;
  infected_percentage: number;
  infected_percentage_moving_average?: number | null;
  tested_total: number;
  tested_total_moving_average?: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NationalTestedGgdAverage {
  values: NationalTestedGgdAverageValue[];
  last_value: NationalTestedGgdAverageValue;
}
export interface NationalTestedGgdAverageValue {
  infected: number;
  infected_percentage: number;
  tested_total: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NationalNursingHome {
  values: NationalNursingHomeValue[];
  last_value: NationalNursingHomeValue;
}
export interface NationalNursingHomeValue {
  newly_infected_people: number;
  newly_infected_people_moving_average: number | null;
  deceased_daily: number;
  deceased_daily_moving_average: number | null;
  newly_infected_locations: number;
  infected_locations_total: number;
  infected_locations_percentage: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NationalDisabilityCare {
  values: NationalDisabilityCareValue[];
  last_value: NationalDisabilityCareValue;
}
export interface NationalDisabilityCareValue {
  newly_infected_people: number;
  newly_infected_people_moving_average: number | null;
  deceased_daily: number;
  deceased_daily_moving_average: number | null;
  newly_infected_locations: number;
  infected_locations_total: number;
  infected_locations_percentage: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NationalBehavior {
  values: NationalBehaviorValue[];
  last_value: NationalBehaviorValue;
}
export interface NationalBehaviorValue {
  number_of_participants: number;
  curfew_compliance: number | null;
  curfew_compliance_trend: ("up" | "down" | "equal") | null;
  wash_hands_compliance: number | null;
  wash_hands_compliance_trend: ("up" | "down" | "equal") | null;
  keep_distance_compliance: number | null;
  keep_distance_compliance_trend: ("up" | "down" | "equal") | null;
  work_from_home_compliance: number | null;
  work_from_home_compliance_trend: ("up" | "down" | "equal") | null;
  avoid_crowds_compliance: number | null;
  avoid_crowds_compliance_trend: ("up" | "down" | "equal") | null;
  symptoms_stay_home_compliance?: number | null;
  symptoms_stay_home_compliance_trend?: ("up" | "down" | "equal") | null;
  symptoms_get_tested_compliance?: number | null;
  symptoms_get_tested_compliance_trend?: ("up" | "down" | "equal") | null;
  wear_mask_public_indoors_compliance: number | null;
  wear_mask_public_indoors_compliance_trend: ("up" | "down" | "equal") | null;
  wear_mask_public_transport_compliance?: number | null;
  wear_mask_public_transport_compliance_trend?: ("up" | "down" | "equal") | null;
  sneeze_cough_elbow_compliance: number | null;
  sneeze_cough_elbow_compliance_trend: ("up" | "down" | "equal") | null;
  max_visitors_compliance: number | null;
  max_visitors_compliance_trend: ("up" | "down" | "equal") | null;
  curfew_support: number | null;
  curfew_support_trend: ("up" | "down" | "equal") | null;
  wash_hands_support: number | null;
  wash_hands_support_trend: ("up" | "down" | "equal") | null;
  keep_distance_support: number | null;
  keep_distance_support_trend: ("up" | "down" | "equal") | null;
  work_from_home_support: number | null;
  work_from_home_support_trend: ("up" | "down" | "equal") | null;
  avoid_crowds_support: number | null;
  avoid_crowds_support_trend: ("up" | "down" | "equal") | null;
  symptoms_stay_home_support?: number | null;
  symptoms_stay_home_support_trend?: ("up" | "down" | "equal") | null;
  symptoms_get_tested_support?: number | null;
  symptoms_get_tested_support_trend?: ("up" | "down" | "equal") | null;
  wear_mask_public_indoors_support: number | null;
  wear_mask_public_indoors_support_trend: ("up" | "down" | "equal") | null;
  wear_mask_public_transport_support?: number | null;
  wear_mask_public_transport_support_trend?: ("up" | "down" | "equal") | null;
  sneeze_cough_elbow_support: number | null;
  sneeze_cough_elbow_support_trend: ("up" | "down" | "equal") | null;
  max_visitors_support: number | null;
  max_visitors_support_trend: ("up" | "down" | "equal") | null;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NationalDeceasedRivm {
  values: NationalDeceasedRivmValue[];
  last_value: NationalDeceasedRivmValue;
}
export interface NationalDeceasedRivmValue {
  covid_daily: number;
  covid_daily_moving_average: number | null;
  covid_total: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlDeceasedRivmPerAgeGroup {
  values: NlDeceasedRivmPerAgeGroupValue[];
}
export interface NlDeceasedRivmPerAgeGroupValue {
  age_group_range: string;
  age_group_percentage: number;
  covid_percentage: number;
  date_unix?: number;
  date_of_insertion_unix: number;
  [k: string]: unknown;
}
export interface NationalDeceasedCbs {
  values: NationalDeceasedCbsValue[];
  last_value: NationalDeceasedCbsValue;
}
export interface NationalDeceasedCbsValue {
  registered: number;
  expected: number;
  expected_min: number;
  expected_max: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NationalElderlyAtHome {
  values: NationalElderlyAtHomeValue[];
  last_value: NationalElderlyAtHomeValue;
}
export interface NationalElderlyAtHomeValue {
  positive_tested_daily: number;
  positive_tested_daily_moving_average: number | null;
  positive_tested_daily_per_100k: number;
  deceased_daily: number;
  deceased_daily_moving_average: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineSupport {
  values: NlVaccineSupportValue[];
  last_value: NlVaccineSupportValue;
}
export interface NlVaccineSupportValue {
  percentage_average: number;
  percentage_70_plus: number | null;
  percentage_55_69: number | null;
  percentage_40_54: number | null;
  percentage_25_39: number | null;
  percentage_16_24: number | null;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NlCoronaMelderApp {
  values: NlCoronaMelderAppValue[];
  last_value: NlCoronaMelderAppValue;
}
export interface NlCoronaMelderAppValue {
  downloaded_total: number;
  warned_daily: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineCoverage {
  values: NlVaccineCoverageValue[];
  last_value: NlVaccineCoverageValue;
}
export interface NlVaccineCoverageValue {
  partially_vaccinated: number;
  partially_vaccinated_percentage: number;
  fully_vaccinated: number;
  fully_vaccinated_percentage: number;
  partially_or_fully_vaccinated: number;
  date_unix: number;
  date_of_report_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineDelivery {
  values: NlVaccineDeliveryValue[];
  last_value: NlVaccineDeliveryValue;
}
export interface NlVaccineDeliveryValue {
  total: number;
  date_of_insertion_unix: number;
  date_of_report_unix: number;
  date_start_unix: number;
  date_end_unix: number;
}
export interface NlVaccineDeliveryEstimate {
  values: NlVaccineDeliveryEstimateValue[];
  last_value: NlVaccineDeliveryEstimateValue;
}
export interface NlVaccineDeliveryEstimateValue {
  total: number;
  date_of_insertion_unix: number;
  date_start_unix: number;
  date_end_unix: number;
}
export interface NlVaccineDeliveryPerSupplier {
  values: NlVaccineDeliveryPerSupplierValue[];
  last_value: NlVaccineDeliveryPerSupplierValue;
}
export interface NlVaccineDeliveryPerSupplierValue {
  total: number;
  bio_n_tech_pfizer: number;
  moderna: number;
  astra_zeneca: number;
  cure_vac?: number;
  janssen?: number;
  sanofi?: number;
  is_estimate: boolean;
  week_number: number;
  date_of_insertion_unix: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_report_unix: number;
}
export interface NlVaccineAdministered {
  values: NlVaccineAdministeredValue[];
  last_value: NlVaccineAdministeredValue;
}
export interface NlVaccineAdministeredValue {
  pfizer: number;
  moderna: number;
  astra_zeneca: number;
  cure_vac?: number;
  janssen?: number;
  sanofi?: number;
  total: number;
  date_of_insertion_unix: number;
  date_start_unix: number;
  date_end_unix: number;
}
export interface NlVaccineAdministeredEstimate {
  values: NlVaccineAdministeredEstimateValue[];
  last_value: NlVaccineAdministeredEstimateValue;
}
export interface NlVaccineAdministeredEstimateValue {
  pfizer: number;
  moderna: number;
  astra_zeneca: number;
  cure_vac?: number;
  janssen?: number;
  sanofi?: number;
  total: number;
  date_of_insertion_unix: number;
  date_start_unix: number;
  date_end_unix: number;
}
export interface NlVaccineAdministeredDoctors {
  values: NlVaccineAdministeredDoctorsValue[];
  last_value: NlVaccineAdministeredDoctorsValue;
}
export interface NlVaccineAdministeredDoctorsValue {
  estimated: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineAdministeredGgdGhor {
  values: NlVaccineAdministeredGgdGhorValue[];
  last_value: NlVaccineAdministeredGgdGhorValue;
}
export interface NlVaccineAdministeredGgdGhorValue {
  reported: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineAdministeredGgd {
  values: NlVaccineAdministeredGgdValue[];
  last_value: NlVaccineAdministeredGgdValue;
}
export interface NlVaccineAdministeredGgdValue {
  estimated: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineAdministeredHospitalsAndCareInstitutions {
  values: NlVaccineAdministeredHospitalsAndCareInstitutionsValue[];
  last_value: NlVaccineAdministeredHospitalsAndCareInstitutionsValue;
}
export interface NlVaccineAdministeredHospitalsAndCareInstitutionsValue {
  estimated: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineAdministeredTotal {
  values: NlVaccineAdministeredTotalValue[];
  last_value: NlVaccineAdministeredTotalValue;
}
export interface NlVaccineAdministeredTotalValue {
  estimated: number;
  reported: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineAdministeredRateMovingAverage {
  values: NlVaccineAdministeredRateMovingAverageValue[];
  last_value: NlVaccineAdministeredRateMovingAverageValue;
}
export interface NlVaccineAdministeredRateMovingAverageValue {
  doses_per_day: number;
  doses_per_second: number;
  seconds_per_dose: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineAdministeredPlanned {
  values: NlVaccineAdministeredPlannedValue[];
  last_value: NlVaccineAdministeredPlannedValue;
}
export interface NlVaccineAdministeredPlannedValue {
  doses: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineCoveragePerAgeGroup {
  values: NlVaccineCoveragePerAgeGroupValue[];
}
export interface NlVaccineCoveragePerAgeGroupValue {
  age_group_range: string;
  age_group_percentage: number;
  age_group_total: number;
  fully_vaccinated: number;
  partially_vaccinated: number;
  fully_vaccinated_percentage: number;
  partially_vaccinated_percentage: number;
  partially_or_fully_vaccinated_percentage: number;
  date_unix: number;
  date_of_insertion_unix: number;
  date_of_report_unix: number;
}
export interface NlVaccineStock {
  values: NlVaccineStockValue[];
  last_value: NlVaccineStockValue;
}
export interface NlVaccineStockValue {
  total_available: number | null;
  total_not_available: number | null;
  bio_n_tech_pfizer_available: number | null;
  bio_n_tech_pfizer_not_available: number | null;
  bio_n_tech_pfizer_total: number | null;
  moderna_available: number | null;
  moderna_not_available: number | null;
  moderna_total: number | null;
  astra_zeneca_available: number | null;
  astra_zeneca_not_available: number | null;
  astra_zeneca_total: number | null;
  janssen_available: number | null;
  janssen_not_available: number | null;
  janssen_total: number | null;
  date_of_insertion_unix: number;
  date_unix: number;
}

export interface Regionaal {
  last_generated: string;
  proto_name: string;
  name: string;
  code: string;
  difference: RegionalDifference;
  g_number: VrGNumber;
  sewer: RegionalSewer;
  sewer_per_installation: RegionalSewerPerInstallation;
  tested_overall: RegionalTestedOverall;
  hospital_nice: RegionalHospitalNice;
  tested_ggd_daily: RegionalTestedGgdDaily;
  tested_ggd_average: RegionalTestedGgdAverage;
  nursing_home: RegionalNursingHome;
  disability_care: RegionalDisabilityCare;
  behavior: RegionalBehavior;
  deceased_rivm: RegionalDeceasedRivm;
  deceased_cbs: RegionalDeceasedCbs;
  elderly_at_home: RegionalElderlyAtHome;
  escalation_level: VrEscalationLevel;
  tested_overall_sum: VrTestedOverallSum;
  hospital_nice_sum: VrHospitalNiceSum;
  vaccine_coverage?: VrVaccineCoverage;
}
export interface RegionalDifference {
  tested_overall__infected_per_100k: DifferenceDecimal;
  tested_overall__infected: DifferenceInteger;
  tested_ggd_average__tested_total: DifferenceInteger;
  tested_ggd_average__infected_percentage: DifferenceDecimal;
  tested_ggd_daily__tested_total: DifferenceInteger;
  tested_ggd_daily__infected_percentage: DifferenceDecimal;
  hospital_nice__admissions_on_date_of_reporting: DifferenceInteger;
  sewer__average: DifferenceDecimal;
  nursing_home__newly_infected_people: DifferenceInteger;
  nursing_home__infected_locations_total: DifferenceInteger;
  nursing_home__deceased_daily: DifferenceInteger;
  disability_care__newly_infected_people: DifferenceInteger;
  disability_care__infected_locations_total: DifferenceInteger;
  elderly_at_home__positive_tested_daily: DifferenceInteger;
  deceased_rivm__covid_daily: DifferenceInteger;
}
export interface DifferenceDecimal {
  old_value: number;
  difference: number;
  old_date_unix: number;
  new_date_unix: number;
}
export interface DifferenceInteger {
  old_value: number;
  difference: number;
  old_date_unix: number;
  new_date_unix: number;
}
export interface VrGNumber {
  values: VrGNumberValue[];
  last_value: VrGNumberValue;
}
export interface VrGNumberValue {
  g_number: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface RegionalSewer {
  values: RegionalSewerValue[];
  last_value: RegionalSewerValue;
}
export interface RegionalSewerValue {
  date_start_unix: number;
  date_end_unix: number;
  average: number;
  total_number_of_samples: number;
  sampled_installation_count: number;
  total_installation_count: number;
  date_of_insertion_unix: number;
}
export interface RegionalSewerPerInstallation {
  values: RegionalSewerPerInstallationInstallation[];
}
export interface RegionalSewerPerInstallationInstallation {
  rwzi_awzi_name: string;
  values: RegionalSewerPerInstallationValue[];
  last_value: RegionalSewerPerInstallationValue;
}
export interface RegionalSewerPerInstallationValue {
  date_unix: number;
  rna_normalized: number;
  date_of_insertion_unix: number;
}
export interface RegionalTestedOverall {
  values: RegionalTestedOverallValue[];
  last_value: RegionalTestedOverallValue;
}
export interface RegionalTestedOverallValue {
  date_unix: number;
  infected: number;
  infected_per_100k: number;
  infected_per_100k_moving_average?: number | null;
  date_of_insertion_unix: number;
}
export interface RegionalHospitalNice {
  values: RegionalHospitalNiceValue[];
  last_value: RegionalHospitalNiceValue;
}
export interface RegionalHospitalNiceValue {
  admissions_on_date_of_admission: number;
  admissions_on_date_of_admission_moving_average: number | null;
  admissions_on_date_of_reporting: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface RegionalTestedGgdDaily {
  values: RegionalTestedGgdDailyValue[];
  last_value: RegionalTestedGgdDailyValue;
}
export interface RegionalTestedGgdDailyValue {
  infected: number;
  infected_moving_average?: number | null;
  infected_percentage: number;
  infected_percentage_moving_average?: number | null;
  tested_total: number;
  tested_total_moving_average?: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface RegionalTestedGgdAverage {
  values: RegionalTestedGgdAverageValue[];
  last_value: RegionalTestedGgdAverageValue;
}
export interface RegionalTestedGgdAverageValue {
  infected: number;
  infected_percentage: number;
  tested_total: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface RegionalNursingHome {
  values: RegionalNursingHomeValue[];
  last_value: RegionalNursingHomeValue;
}
export interface RegionalNursingHomeValue {
  newly_infected_people: number;
  newly_infected_people_moving_average: number | null;
  newly_infected_locations: number;
  infected_locations_total: number;
  infected_locations_percentage: number;
  deceased_daily: number;
  deceased_daily_moving_average: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface RegionalDisabilityCare {
  values: RegionalDisabilityCareValue[];
  last_value: RegionalDisabilityCareValue;
}
export interface RegionalDisabilityCareValue {
  newly_infected_people: number;
  newly_infected_people_moving_average: number | null;
  newly_infected_locations: number;
  infected_locations_total: number;
  infected_locations_percentage: number;
  deceased_daily: number;
  deceased_daily_moving_average: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface RegionalBehavior {
  values: RegionalBehaviorValue[];
  last_value: RegionalBehaviorValue;
}
export interface RegionalBehaviorValue {
  number_of_participants: number;
  curfew_compliance: number | null;
  curfew_compliance_trend: ("up" | "down" | "equal") | null;
  wash_hands_compliance: number | null;
  wash_hands_compliance_trend: ("up" | "down" | "equal") | null;
  keep_distance_compliance: number | null;
  keep_distance_compliance_trend: ("up" | "down" | "equal") | null;
  work_from_home_compliance: number | null;
  work_from_home_compliance_trend: ("up" | "down" | "equal") | null;
  avoid_crowds_compliance: number | null;
  avoid_crowds_compliance_trend: ("up" | "down" | "equal") | null;
  wear_mask_public_indoors_compliance: number | null;
  wear_mask_public_indoors_compliance_trend: ("up" | "down" | "equal") | null;
  sneeze_cough_elbow_compliance: number | null;
  sneeze_cough_elbow_compliance_trend: ("up" | "down" | "equal") | null;
  max_visitors_compliance: number | null;
  max_visitors_compliance_trend: ("up" | "down" | "equal") | null;
  curfew_support: number | null;
  curfew_support_trend: ("up" | "down" | "equal") | null;
  wash_hands_support: number | null;
  wash_hands_support_trend: ("up" | "down" | "equal") | null;
  keep_distance_support: number | null;
  keep_distance_support_trend: ("up" | "down" | "equal") | null;
  work_from_home_support: number | null;
  work_from_home_support_trend: ("up" | "down" | "equal") | null;
  avoid_crowds_support: number | null;
  avoid_crowds_support_trend: ("up" | "down" | "equal") | null;
  wear_mask_public_indoors_support: number | null;
  wear_mask_public_indoors_support_trend: ("up" | "down" | "equal") | null;
  sneeze_cough_elbow_support: number | null;
  sneeze_cough_elbow_support_trend: ("up" | "down" | "equal") | null;
  max_visitors_support: number | null;
  max_visitors_support_trend: ("up" | "down" | "equal") | null;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface RegionalDeceasedRivm {
  values: RegionalDeceasedRivmValue[];
  last_value: RegionalDeceasedRivmValue;
}
export interface RegionalDeceasedRivmValue {
  covid_daily: number;
  covid_daily_moving_average: number | null;
  covid_total: number;
  date_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface RegionalDeceasedCbs {
  values: RegionalDeceasedCbsValue[];
  last_value: RegionalDeceasedCbsValue;
}
export interface RegionalDeceasedCbsValue {
  registered: number;
  expected: number;
  expected_min: number;
  expected_max: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface RegionalElderlyAtHome {
  values: RegionalElderlyAtHomeValue[];
  last_value: RegionalElderlyAtHomeValue;
}
export interface RegionalElderlyAtHomeValue {
  positive_tested_daily: number;
  positive_tested_daily_moving_average: number | null;
  positive_tested_daily_per_100k: number;
  deceased_daily: number;
  deceased_daily_moving_average: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface VrEscalationLevel {
  level: number;
  positive_tested_per_100k: number;
  hospital_admissions_per_million: number;
  based_on_statistics_to_unix: number;
  based_on_statistics_from_unix: number;
  next_determined_unix: number;
  last_determined_unix: number;
  valid_from_unix: number;
  date_of_insertion_unix: number;
}
export interface VrTestedOverallSum {
  values: VrTestedOverallSumValue[];
  last_value: VrTestedOverallSumValue;
}
export interface VrTestedOverallSumValue {
  date_start_unix: number;
  date_end_unix: number;
  infected_per_100k: number;
  date_of_insertion_unix: number;
}
export interface VrHospitalNiceSum {
  values: VrHospitalNiceSumValue[];
  last_value: VrHospitalNiceSumValue;
}
export interface VrHospitalNiceSumValue {
  admissions_per_1m: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface VrVaccineCoverage {
  values: VrVaccineCoverageValue[];
  last_value: VrVaccineCoverageValue;
}
export interface VrVaccineCoverageValue {
  partially_vaccinated: number;
  partially_vaccinated_percentage: number;
  fully_vaccinated: number;
  fully_vaccinated_percentage: number;
  partially_or_fully_vaccinated: number;
  date_unix: number;
  date_of_report_unix: number;
  date_of_insertion_unix: number;
}

export interface Regions {
  last_generated: string;
  proto_name: "VR_COLLECTION";
  name: string;
  code: string;
  hospital_nice: RegionsHospitalNice[];
  tested_overall: RegionsTestedOverall[];
  escalation_levels: EscalationLevels[];
  nursing_home: RegionsNursingHome[];
  sewer: RegionsSewer[];
  behavior: RegionsBehavior[];
  disability_care: RegionsDisabilityCare[];
  elderly_at_home: RegionsElderlyAtHome[];
}
export interface RegionsHospitalNice {
  date_unix: number;
  vrcode: string;
  admissions_on_date_of_admission: number;
  admissions_on_date_of_reporting: number;
  date_of_insertion_unix: number;
}
export interface RegionsTestedOverall {
  date_unix: number;
  vrcode: string;
  infected_per_100k: number;
  infected: number;
  date_of_insertion_unix: number;
}
export interface EscalationLevels {
  vrcode: string;
  level: number;
  positive_tested_per_100k: number;
  hospital_admissions_per_million: number;
  based_on_statistics_to_unix: number;
  based_on_statistics_from_unix: number;
  next_determined_unix: number;
  last_determined_unix: number;
  valid_from_unix: number;
  date_of_insertion_unix: number;
}
export interface RegionsNursingHome {
  newly_infected_people: number;
  newly_infected_locations: number;
  infected_locations_total: number;
  infected_locations_percentage: number;
  deceased_daily: number;
  date_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface RegionsSewer {
  date_start_unix: number;
  date_end_unix: number;
  vrcode: string;
  average: number;
  total_installation_count: number;
  date_of_insertion_unix: number;
}
export interface RegionsBehavior {
  vrcode: string;
  number_of_participants: number;
  curfew_compliance: number | null;
  curfew_compliance_trend: ("up" | "down" | "equal") | null;
  wash_hands_compliance: number | null;
  wash_hands_compliance_trend: ("up" | "down" | "equal") | null;
  keep_distance_compliance: number | null;
  keep_distance_compliance_trend: ("up" | "down" | "equal") | null;
  work_from_home_compliance: number | null;
  work_from_home_compliance_trend: ("up" | "down" | "equal") | null;
  avoid_crowds_compliance: number | null;
  avoid_crowds_compliance_trend: ("up" | "down" | "equal") | null;
  wear_mask_public_indoors_compliance: number | null;
  wear_mask_public_indoors_compliance_trend: ("up" | "down" | "equal") | null;
  sneeze_cough_elbow_compliance: number | null;
  sneeze_cough_elbow_compliance_trend: ("up" | "down" | "equal") | null;
  max_visitors_compliance: number | null;
  max_visitors_compliance_trend: ("up" | "down" | "equal") | null;
  curfew_support: number | null;
  curfew_support_trend: ("up" | "down" | "equal") | null;
  wash_hands_support: number | null;
  wash_hands_support_trend: ("up" | "down" | "equal") | null;
  keep_distance_support: number | null;
  keep_distance_support_trend: ("up" | "down" | "equal") | null;
  work_from_home_support: number | null;
  work_from_home_support_trend: ("up" | "down" | "equal") | null;
  avoid_crowds_support: number | null;
  avoid_crowds_support_trend: ("up" | "down" | "equal") | null;
  wear_mask_public_indoors_support: number | null;
  wear_mask_public_indoors_support_trend: ("up" | "down" | "equal") | null;
  sneeze_cough_elbow_support: number | null;
  sneeze_cough_elbow_support_trend: ("up" | "down" | "equal") | null;
  max_visitors_support: number | null;
  max_visitors_support_trend: ("up" | "down" | "equal") | null;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface RegionsDisabilityCare {
  newly_infected_people: number;
  newly_infected_locations: number;
  infected_locations_total: number;
  infected_locations_percentage: number;
  deceased_daily: number;
  date_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface RegionsElderlyAtHome {
  positive_tested_daily: number;
  positive_tested_daily_per_100k: number;
  deceased_daily: number;
  date_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
