/**
* This file was automatically generated by json-schema-to-typescript.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run 'yarn generate-data-types' to regenerate this file.
*/

export type GmCode = string;

export interface Gm {
  last_generated: string;
  proto_name: GmCode;
  name: GmCode;
  code: GmCode;
  static_values: GmStaticValues;
  deceased_rivm: GmDeceasedRivm;
  difference: GmDifference;
  hospital_nice: GmHospitalNice;
  tested_overall: GmTestedOverall;
  sewer: GmSewer;
  sewer_per_installation?: GmSewerPerInstallation;
  vaccine_coverage_per_age_group: GmVaccineCoveragePerAgeGroup;
  booster_coverage: GmBoosterCoverage;
}
export interface GmStaticValues {
  population_count: number;
}
export interface GmDeceasedRivm {
  values: GmDeceasedRivmValue[];
  last_value: GmDeceasedRivmValue;
}
export interface GmDeceasedRivmValue {
  covid_daily: number;
  covid_daily_moving_average: number | null;
  covid_total: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface GmDifference {
  tested_overall__infected_per_100k_moving_average: DifferenceDecimal;
  tested_overall__infected_moving_average: DifferenceDecimal;
  hospital_nice__admissions_on_date_of_reporting_moving_average: DifferenceDecimal;
  sewer__average?: DifferenceInteger;
  deceased_rivm__covid_daily: DifferenceInteger;
}
export interface DifferenceDecimal {
  old_value: number;
  difference: number;
  old_date_unix: number;
  new_date_unix: number;
}
export interface DifferenceInteger {
  old_value: number;
  difference: number;
  old_date_unix: number;
  new_date_unix: number;
}
export interface GmHospitalNice {
  values: GmHospitalNiceValue[];
  last_value: GmHospitalNiceValue;
}
export interface GmHospitalNiceValue {
  date_unix: number;
  admissions_on_date_of_admission: number;
  admissions_on_date_of_admission_moving_average: number | null;
  admissions_on_date_of_admission_moving_average_rounded: number | null;
  admissions_on_date_of_reporting: number;
  date_of_insertion_unix: number;
}
export interface GmTestedOverall {
  values: GmTestedOverallValue[];
  last_value: GmTestedOverallValue;
}
export interface GmTestedOverallValue {
  date_unix: number;
  infected: number;
  infected_moving_average: number | null;
  infected_moving_average_rounded: number | null;
  infected_per_100k: number;
  infected_per_100k_moving_average: number | null;
  date_of_insertion_unix: number;
}
export interface GmSewer {
  values: GmSewerValue[];
  last_value: GmSewerValue;
}
export interface GmSewerValue {
  date_start_unix: number;
  date_end_unix: number;
  average: number;
  total_number_of_samples: number;
  sampled_installation_count: number;
  total_installation_count: number;
  date_of_insertion_unix: number;
}
export interface GmSewerPerInstallation {
  values: MunicipalSewerPerInstallationInstallation[];
}
export interface MunicipalSewerPerInstallationInstallation {
  rwzi_awzi_name: string;
  values: GmSewerPerInstallationValue[];
  last_value: GmSewerPerInstallationValue;
}
export interface GmSewerPerInstallationValue {
  date_unix: number;
  rna_normalized: number;
  date_of_insertion_unix: number;
}
export interface GmVaccineCoveragePerAgeGroup {
  values: GmVaccineCoveragePerAgeGroupValue[];
}
export interface GmVaccineCoveragePerAgeGroupValue {
  age_group_range: "12+" | "18+";
  fully_vaccinated_percentage: number | null;
  has_one_shot_percentage: number | null;
  booster_shot_percentage: number | null;
  birthyear_range: string;
  fully_vaccinated_percentage_label: string | null;
  has_one_shot_percentage_label: string | null;
  booster_shot_percentage_label: string | null;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface GmBoosterCoverage {
  values: GmBoosterCoverageValue[];
}
export interface GmBoosterCoverageValue {
  age_group?: "12+" | "18+";
  percentage: number;
  percentage_label: string | null;
  date_unix: number;
  date_of_insertion_unix: number;
}

export type GmCollectionId = "GM_COLLECTION";

export interface GmCollection {
  last_generated: string;
  proto_name: GmCollectionId;
  name: GmCollectionId;
  code: GmCollectionId;
  hospital_nice: GmCollectionHospitalNice[];
  hospital_nice_choropleth: GmCollectionHospitalNice[];
  tested_overall: GmCollectionTestedOverall[];
  sewer: GmCollectionSewer[];
  vaccine_coverage_per_age_group: GmCollectionVaccineCoveragePerAgeGroup[];
}
export interface GmCollectionHospitalNice {
  date_unix: number;
  gmcode: string;
  admissions_on_date_of_admission: number;
  admissions_on_date_of_admission_per_100000: number;
  admissions_on_date_of_reporting: number;
  date_of_insertion_unix: number;
}
export interface GmCollectionTestedOverall {
  date_unix: number;
  gmcode: string;
  infected_per_100k: number;
  infected: number;
  date_of_insertion_unix: number;
}
export interface GmCollectionSewer {
  date_start_unix: number;
  date_end_unix: number;
  gmcode: string;
  average: number;
  total_installation_count: number;
  date_of_insertion_unix: number;
}
export interface GmCollectionVaccineCoveragePerAgeGroup {
  gmcode: string;
  age_group_range: "12+" | "18+";
  fully_vaccinated_percentage: number | null;
  has_one_shot_percentage: number | null;
  booster_shot_percentage: number | null;
  birthyear_range: string;
  fully_vaccinated_percentage_label: string | null;
  has_one_shot_percentage_label: string | null;
  booster_shot_percentage_label: string | null;
  date_unix: number;
  date_of_insertion_unix: number;
}

export type InCode = string;

export interface In {
  last_generated: string;
  proto_name: InCode;
  name: InCode;
  code: string;
  named_difference: InNamedDifference;
  tested_overall: InTestedOverall;
  variants?: InVariants;
}
export interface InNamedDifference {
  variants__percentage?: OptionalNamedDifferenceDecimal[];
}
export interface OptionalNamedDifferenceDecimal {
  name: string;
  old_value: number | null;
  difference: number | null;
  old_date_unix: number;
  new_date_unix: number;
}
export interface InTestedOverall {
  values: InTestedOverallValue[];
  last_value: InTestedOverallValue;
}
export interface InTestedOverallValue {
  infected: number;
  infected_per_100k_average: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface InVariants {
  values?: InVariantsVariant[];
}
export interface InVariantsVariant {
  name: string;
  values: InVariantsVariantValue[];
  last_value: InVariantsVariantValue;
}
export interface InVariantsVariantValue {
  percentage: number | null;
  occurrence: number | null;
  is_variant_of_concern: boolean;
  sample_size: number;
  is_reliable: boolean;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}

export type InCollectionId = "IN_COLLECTION";

export interface InCollection {
  last_generated: string;
  proto_name: InCollectionId;
  name: InCollectionId;
  code: InCollectionId;
  tested_overall: InCollectionTestedOverall[];
}
export interface InCollectionTestedOverall {
  country_code: string;
  infected: number;
  infected_per_100k_average: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}

export type NlId = "NL";

export interface Nl {
  last_generated: string;
  proto_name: NlId;
  name: NlId;
  code: NlId;
  difference: NlDifference;
  named_difference: NlNamedDifference;
  booster_shot_administered: NlBoosterShotAdministered;
  repeating_shot_administered: NlRepeatingShotAdministered;
  booster_coverage: NlBoosterCoverage;
  doctor: NlDoctor;
  g_number: NlGNumber;
  infectious_people: NlInfectiousPeople;
  intensive_care_nice: NlIntensiveCareNice;
  intensive_care_nice_per_age_group: NlIntensiveCareNicePerAgeGroup;
  tested_overall: NlTestedOverall;
  tested_per_age_group: NlTestedPerAgeGroup;
  reproduction: NlReproduction;
  sewer: NlSewer;
  hospital_nice: NlHospitalNice;
  hospital_nice_per_age_group: NlHospitalNicePerAgeGroup;
  hospital_lcps: NlHospitalLcps;
  intensive_care_lcps: NlIntensiveCareLcps;
  tested_ggd: NlTestedGgd;
  tested_ggd_archived: NlTestedGgdArchived;
  nursing_home: NlNursingHome;
  disability_care: NlDisabilityCare;
  behavior: NlBehavior;
  behavior_per_age_group?: NlBehaviorPerAgeGroup;
  behavior_get_tested_support_per_age_group?: NlBehaviorGetTestedSupportPerAgeGroup;
  behavior_annotations: NlBehaviorAnnotations;
  deceased_rivm: NlDeceasedRivm;
  deceased_rivm_per_age_group: NlDeceasedRivmPerAgeGroup;
  deceased_cbs: NlDeceasedCbs;
  elderly_at_home: NlElderlyAtHome;
  vaccine_vaccinated_or_support: NlVaccineVaccinatedOrSupport;
  corona_melder_app_download: NlCoronaMelderAppDownload;
  corona_melder_app_warning: NlCoronaMelderAppWarning;
  vaccine_coverage?: NlVaccineCoverage;
  vaccine_delivery_estimate: NlVaccineDeliveryEstimate;
  vaccine_delivery_per_supplier: NlVaccineDeliveryPerSupplier;
  vaccine_administered: NlVaccineAdministered;
  vaccine_administered_doctors: NlVaccineAdministeredDoctors;
  vaccine_administered_ggd_ghor: NlVaccineAdministeredGgdGhor;
  vaccine_administered_ggd: NlVaccineAdministeredGgd;
  vaccine_administered_hospitals_and_care_institutions: NlVaccineAdministeredHospitalsAndCareInstitutions;
  vaccine_administered_total: NlVaccineAdministeredTotal;
  vaccine_administered_planned: NlVaccineAdministeredPlanned;
  vaccine_coverage_per_age_group: NlVaccineCoveragePerAgeGroup;
  vaccine_coverage_per_age_group_estimated: NlVaccineCoveragePerAgeGroupEstimatedValue;
  vaccine_stock: NlVaccineStock;
  variants?: NlVariants;
}
export interface NlDifference {
  tested_overall__infected_per_100k_moving_average: DifferenceDecimal;
  tested_overall__infected_moving_average: DifferenceDecimal;
  tested_ggd__tested_total_moving_average: DifferenceDecimal;
  tested_ggd__infected_percentage_moving_average: DifferenceDecimal;
  infectious_people__estimate: DifferenceInteger;
  hospital_nice__admissions_on_date_of_reporting_moving_average: DifferenceDecimal;
  hospital_lcps__beds_occupied_covid: DifferenceInteger;
  intensive_care_nice__admissions_on_date_of_reporting_moving_average: DifferenceDecimal;
  intensive_care_lcps__beds_occupied_covid: DifferenceInteger;
  doctor__covid_symptoms_per_100k: DifferenceDecimal;
  doctor__covid_symptoms: DifferenceInteger;
  sewer__average: DifferenceInteger;
  nursing_home__newly_infected_people: DifferenceInteger;
  nursing_home__infected_locations_total: DifferenceInteger;
  nursing_home__deceased_daily: DifferenceInteger;
  reproduction__index_average: DifferenceDecimal;
  corona_melder_app_warning__count: DifferenceInteger;
  disability_care__newly_infected_people: DifferenceInteger;
  disability_care__infected_locations_total: DifferenceInteger;
  elderly_at_home__positive_tested_daily: DifferenceInteger;
  deceased_rivm__covid_daily: DifferenceInteger;
}
export interface DifferenceDecimal {
  old_value: number;
  difference: number;
  old_date_unix: number;
  new_date_unix: number;
}
export interface DifferenceInteger {
  old_value: number;
  difference: number;
  old_date_unix: number;
  new_date_unix: number;
}
export interface NlNamedDifference {
  variants__percentage: NamedDifferenceDecimal[];
}
export interface NamedDifferenceDecimal {
  name: string;
  old_value: number;
  difference: number;
  old_date_unix: number;
  new_date_unix: number;
}
export interface NlBoosterShotAdministered {
  values: NlBoosterShotAdministeredValue[];
  last_value: NlBoosterShotAdministeredValue;
}
export interface NlBoosterShotAdministeredValue {
  administered_total: number;
  ggd_administered_last_7_days: number;
  ggd_administered_total: number;
  others_administered_total: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NlRepeatingShotAdministered {
  values: NlRepeatingShotAdministeredValue[];
  last_value: NlRepeatingShotAdministeredValue;
}
export interface NlRepeatingShotAdministeredValue {
  ggd_administered_total: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlBoosterCoverage {
  values: NlBoosterCoverageValue[];
}
export interface NlBoosterCoverageValue {
  age_group?: "12+" | "18+";
  percentage: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlDoctor {
  values: NlDoctorValue[];
  last_value: NlDoctorValue;
}
export interface NlDoctorValue {
  date_start_unix: number;
  date_end_unix: number;
  covid_symptoms_per_100k: number;
  covid_symptoms: number;
  date_of_insertion_unix: number;
}
export interface NlGNumber {
  values: NlGNumberValue[];
  last_value: NlGNumberValue;
}
export interface NlGNumberValue {
  g_number: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlInfectiousPeople {
  values: NlInfectiousPeopleValue[];
  last_value: NlInfectiousPeopleValue;
}
export interface NlInfectiousPeopleValue {
  margin_low: number;
  estimate: number | null;
  margin_high: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlIntensiveCareNice {
  values: NlIntensiveCareNiceValue[];
  last_value: NlIntensiveCareNiceValue;
}
export interface NlIntensiveCareNiceValue {
  admissions_on_date_of_admission: number;
  admissions_on_date_of_admission_moving_average: number | null;
  admissions_on_date_of_admission_moving_average_rounded: number | null;
  admissions_on_date_of_reporting: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlIntensiveCareNicePerAgeGroup {
  values: NlIntensiveCareNicePerAgeGroupValue[];
  last_value: NlIntensiveCareNicePerAgeGroupValue;
}
export interface NlIntensiveCareNicePerAgeGroupValue {
  admissions_age_0_19_per_million: number;
  admissions_age_20_29_per_million: number;
  admissions_age_30_39_per_million: number;
  admissions_age_40_49_per_million: number;
  admissions_age_50_59_per_million: number;
  admissions_age_60_69_per_million: number;
  admissions_age_70_79_per_million: number;
  admissions_age_80_89_per_million: number;
  admissions_age_90_plus_per_million: number;
  admissions_overall_per_million: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NlTestedOverall {
  values: NlTestedOverallValue[];
  last_value: NlTestedOverallValue;
}
export interface NlTestedOverallValue {
  infected: number;
  infected_moving_average: number | null;
  infected_moving_average_rounded: number | null;
  infected_per_100k: number;
  infected_per_100k_moving_average: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlTestedPerAgeGroup {
  values: NlTestedPerAgeGroupValue[];
  last_value: NlTestedPerAgeGroupValue;
}
export interface NlTestedPerAgeGroupValue {
  infected_age_0_9_per_100k: number;
  infected_age_10_19_per_100k: number;
  infected_age_20_29_per_100k: number;
  infected_age_30_39_per_100k: number;
  infected_age_40_49_per_100k: number;
  infected_age_50_59_per_100k: number;
  infected_age_60_69_per_100k: number;
  infected_age_70_79_per_100k: number;
  infected_age_80_89_per_100k: number;
  infected_age_90_plus_per_100k: number;
  infected_overall_per_100k: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlReproduction {
  values: NlReproductionValue[];
  last_value: NlReproductionValue;
}
export interface NlReproductionValue {
  index_low: number | null;
  index_average: number | null;
  index_high: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlSewer {
  values: NlSewerValue[];
  last_value: NlSewerValue;
}
export interface NlSewerValue {
  average: number | null;
  date_of_insertion_unix: number;
  date_unix: number;
}
export interface NlHospitalNice {
  values: NlHospitalNiceValue[];
  last_value: NlHospitalNiceValue;
}
export interface NlHospitalNiceValue {
  admissions_on_date_of_admission: number;
  admissions_on_date_of_admission_moving_average: number | null;
  admissions_on_date_of_admission_moving_average_rounded: number | null;
  admissions_on_date_of_reporting: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlHospitalNicePerAgeGroup {
  values: NlHospitalNicePerAgeGroupValue[];
  last_value: NlHospitalNicePerAgeGroupValue;
}
export interface NlHospitalNicePerAgeGroupValue {
  admissions_age_0_19_per_million: number;
  admissions_age_20_29_per_million: number;
  admissions_age_30_39_per_million: number;
  admissions_age_40_49_per_million: number;
  admissions_age_50_59_per_million: number;
  admissions_age_60_69_per_million: number;
  admissions_age_70_79_per_million: number;
  admissions_age_80_89_per_million: number;
  admissions_age_90_plus_per_million: number;
  admissions_overall_per_million: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NlHospitalLcps {
  values: NlHospitalLcpsValue[];
  last_value: NlHospitalLcpsValue;
}
export interface NlHospitalLcpsValue {
  beds_occupied_covid: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlIntensiveCareLcps {
  values: NlIntensiveCareLcpsValue[];
  last_value: NlIntensiveCareLcpsValue;
}
export interface NlIntensiveCareLcpsValue {
  beds_occupied_covid: number | null;
  beds_occupied_non_covid: number | null;
  beds_occupied_covid_percentage: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlTestedGgd {
  values: NlTestedGgdValue[];
  last_value: NlTestedGgdValue;
}
export interface NlTestedGgdValue {
  infected: number;
  infected_moving_average: number | null;
  infected_percentage: number;
  infected_percentage_moving_average: number | null;
  tested_total: number;
  tested_total_moving_average: number | null;
  tested_total_moving_average_rounded: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlTestedGgdArchived {
  values: NlTestedGgdArchivedValue[];
  last_value: NlTestedGgdArchivedValue;
}
export interface NlTestedGgdArchivedValue {
  infected_percentage: number;
  infected_percentage_moving_average: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlNursingHome {
  values: NlNursingHomeValue[];
  last_value: NlNursingHomeValue;
}
export interface NlNursingHomeValue {
  newly_infected_people: number;
  newly_infected_people_moving_average: number | null;
  deceased_daily: number;
  deceased_daily_moving_average: number | null;
  newly_infected_locations: number;
  infected_locations_total: number;
  infected_locations_percentage: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlDisabilityCare {
  values: NlDisabilityCareValue[];
  last_value: NlDisabilityCareValue;
}
export interface NlDisabilityCareValue {
  newly_infected_people: number;
  newly_infected_people_moving_average: number | null;
  deceased_daily: number;
  deceased_daily_moving_average: number | null;
  newly_infected_locations: number;
  infected_locations_total: number;
  infected_locations_percentage: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlBehavior {
  values: NlBehaviorValue[];
  last_value: NlBehaviorValue;
}
export interface NlBehaviorValue {
  number_of_participants: number;
  curfew_compliance?: number | null;
  curfew_compliance_trend: ("up" | "down" | "equal") | null;
  wash_hands_compliance?: number | null;
  wash_hands_compliance_trend: ("up" | "down" | "equal") | null;
  keep_distance_compliance?: number | null;
  keep_distance_compliance_trend: ("up" | "down" | "equal") | null;
  work_from_home_compliance?: number | null;
  work_from_home_compliance_trend: ("up" | "down" | "equal") | null;
  avoid_crowds_compliance?: number | null;
  avoid_crowds_compliance_trend: ("up" | "down" | "equal") | null;
  symptoms_stay_home_if_mandatory_compliance?: number | null;
  symptoms_stay_home_if_mandatory_compliance_trend?: ("up" | "down" | "equal") | null;
  symptoms_get_tested_compliance?: number | null;
  symptoms_get_tested_compliance_trend?: ("up" | "down" | "equal") | null;
  wear_mask_public_indoors_compliance?: number | null;
  wear_mask_public_indoors_compliance_trend: ("up" | "down" | "equal") | null;
  wear_mask_public_transport_compliance?: number | null;
  wear_mask_public_transport_compliance_trend?: ("up" | "down" | "equal") | null;
  sneeze_cough_elbow_compliance?: number | null;
  sneeze_cough_elbow_compliance_trend: ("up" | "down" | "equal") | null;
  max_visitors_compliance?: number | null;
  max_visitors_compliance_trend: ("up" | "down" | "equal") | null;
  ventilate_home_compliance?: number | null;
  ventilate_home_compliance_trend: ("up" | "down" | "equal") | null;
  selftest_visit_compliance?: number | null;
  selftest_visit_compliance_trend: ("up" | "down" | "equal") | null;
  curfew_support?: number | null;
  curfew_support_trend: ("up" | "down" | "equal") | null;
  wash_hands_support?: number | null;
  wash_hands_support_trend: ("up" | "down" | "equal") | null;
  keep_distance_support?: number | null;
  keep_distance_support_trend: ("up" | "down" | "equal") | null;
  work_from_home_support?: number | null;
  work_from_home_support_trend: ("up" | "down" | "equal") | null;
  avoid_crowds_support?: number | null;
  avoid_crowds_support_trend: ("up" | "down" | "equal") | null;
  symptoms_stay_home_if_mandatory_support?: number | null;
  symptoms_stay_home_if_mandatory_support_trend?: ("up" | "down" | "equal") | null;
  symptoms_get_tested_support?: number | null;
  symptoms_get_tested_support_trend?: ("up" | "down" | "equal") | null;
  wear_mask_public_indoors_support?: number | null;
  wear_mask_public_indoors_support_trend: ("up" | "down" | "equal") | null;
  wear_mask_public_transport_support?: number | null;
  wear_mask_public_transport_support_trend?: ("up" | "down" | "equal") | null;
  sneeze_cough_elbow_support?: number | null;
  sneeze_cough_elbow_support_trend: ("up" | "down" | "equal") | null;
  max_visitors_support?: number | null;
  max_visitors_support_trend: ("up" | "down" | "equal") | null;
  ventilate_home_support?: number | null;
  ventilate_home_support_trend: ("up" | "down" | "equal") | null;
  selftest_visit_support?: number | null;
  selftest_visit_support_trend: ("up" | "down" | "equal") | null;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NlBehaviorPerAgeGroup {
  keep_distance_compliance?: NlBehaviorPerAgeGroupValue;
  keep_distance_support?: NlBehaviorPerAgeGroupValue;
  sneeze_cough_elbow_compliance?: NlBehaviorPerAgeGroupValue;
  sneeze_cough_elbow_support?: NlBehaviorPerAgeGroupValue;
  wash_hands_compliance?: NlBehaviorPerAgeGroupValue;
  wash_hands_support?: NlBehaviorPerAgeGroupValue;
  work_from_home_compliance?: NlBehaviorPerAgeGroupValue;
  work_from_home_support?: NlBehaviorPerAgeGroupValue;
  ventilate_home_compliance?: NlBehaviorPerAgeGroupValue;
  ventilate_home_support?: NlBehaviorPerAgeGroupValue;
  selftest_visit_compliance?: NlBehaviorPerAgeGroupValue;
  selftest_visit_support?: NlBehaviorPerAgeGroupValue;
  date_of_insertion_unix: number;
  date_start_unix: number;
  date_end_unix: number;
}
export interface NlBehaviorPerAgeGroupValue {
  "16_24": number | null;
  "25_39": number | null;
  "40_54": number | null;
  "55_69": number | null;
  "70_plus": number | null;
}
export interface NlBehaviorGetTestedSupportPerAgeGroup {
  values: NlBehaviorGetTestedSupportPerAgeGroupValue[];
  last_value: NlBehaviorGetTestedSupportPerAgeGroupValue;
}
export interface NlBehaviorGetTestedSupportPerAgeGroupValue {
  percentage_average: number;
  percentage_70_plus: number;
  percentage_55_69: number;
  percentage_40_54: number;
  percentage_25_39: number;
  percentage_16_24: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NlBehaviorAnnotations {
  values: NlBehaviorAnnotations1[];
}
export interface NlBehaviorAnnotations1 {
  behavior_indicator:
    | "wash_hands"
    | "curfew"
    | "keep_distance"
    | "work_from_home"
    | "avoid_crowds"
    | "symptoms_stay_home_if_mandatory"
    | "symptoms_get_tested"
    | "wear_mask_public_indoors"
    | "wear_mask_public_transport"
    | "sneeze_cough_elbow"
    | "max_visitors"
    | "ventilate_home"
    | "selftest_visit";
  message_title_nl: string;
  message_title_en: string;
  message_desc_nl: string;
  message_desc_en: string;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NlDeceasedRivm {
  values: NlDeceasedRivmValue[];
  last_value: NlDeceasedRivmValue;
}
export interface NlDeceasedRivmValue {
  covid_daily: number;
  covid_daily_moving_average: number | null;
  covid_total: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlDeceasedRivmPerAgeGroup {
  values: NlDeceasedRivmPerAgeGroupValue[];
}
export interface NlDeceasedRivmPerAgeGroupValue {
  age_group_range: string;
  age_group_percentage: number;
  covid_percentage: number;
  date_unix?: number;
  date_of_insertion_unix: number;
}
export interface NlDeceasedCbs {
  values: NlDeceasedCbsValue[];
  last_value: NlDeceasedCbsValue;
}
export interface NlDeceasedCbsValue {
  registered: number;
  expected: number;
  expected_min: number;
  expected_max: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NlElderlyAtHome {
  values: NlElderlyAtHomeValue[];
  last_value: NlElderlyAtHomeValue;
}
export interface NlElderlyAtHomeValue {
  positive_tested_daily: number;
  positive_tested_daily_moving_average: number | null;
  positive_tested_daily_per_100k: number;
  deceased_daily: number;
  deceased_daily_moving_average: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineVaccinatedOrSupport {
  values: NlVaccineVaccinatedOrSupportValue[];
  last_value: NlVaccineVaccinatedOrSupportValue;
}
export interface NlVaccineVaccinatedOrSupportValue {
  percentage_average: number;
  percentage_70_plus: number | null;
  percentage_55_69: number | null;
  percentage_40_54: number | null;
  percentage_25_39: number | null;
  percentage_16_24: number | null;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NlCoronaMelderAppDownload {
  values: NlCoronaMelderAppDownloadValue[];
  last_value: NlCoronaMelderAppDownloadValue;
}
export interface NlCoronaMelderAppDownloadValue {
  count: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlCoronaMelderAppWarning {
  values: NlCoronaMelderAppWarningValue[];
  last_value: NlCoronaMelderAppWarningValue;
}
export interface NlCoronaMelderAppWarningValue {
  count: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineCoverage {
  values: NlVaccineCoverageValue[];
  last_value: NlVaccineCoverageValue;
}
export interface NlVaccineCoverageValue {
  booster_vaccinated: number;
  partially_vaccinated: number;
  fully_vaccinated: number;
  partially_or_fully_vaccinated: number;
  date_start_unix: number;
  date_end_unix: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineDeliveryEstimate {
  values: NlVaccineDeliveryEstimateValue[];
  last_value: NlVaccineDeliveryEstimateValue;
}
export interface NlVaccineDeliveryEstimateValue {
  total: number;
  date_of_insertion_unix: number;
  date_start_unix: number;
  date_end_unix: number;
}
export interface NlVaccineDeliveryPerSupplier {
  values: NlVaccineDeliveryPerSupplierValue[];
  last_value: NlVaccineDeliveryPerSupplierValue;
}
export interface NlVaccineDeliveryPerSupplierValue {
  total: number;
  bio_n_tech_pfizer: number;
  moderna: number;
  astra_zeneca: number;
  cure_vac?: number;
  janssen?: number;
  sanofi?: number;
  is_estimate: boolean;
  week_number: number;
  date_of_insertion_unix: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_report_unix: number;
}
export interface NlVaccineAdministered {
  values: NlVaccineAdministeredValue[];
  last_value: NlVaccineAdministeredValue;
}
export interface NlVaccineAdministeredValue {
  pfizer: number;
  moderna: number;
  astra_zeneca: number;
  cure_vac?: number;
  janssen?: number;
  sanofi?: number;
  novavax: number;
  total: number;
  date_of_insertion_unix: number;
  date_start_unix: number;
  date_end_unix: number;
}
export interface NlVaccineAdministeredDoctors {
  values: NlVaccineAdministeredDoctorsValue[];
  last_value: NlVaccineAdministeredDoctorsValue;
}
export interface NlVaccineAdministeredDoctorsValue {
  estimated: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineAdministeredGgdGhor {
  values: NlVaccineAdministeredGgdGhorValue[];
  last_value: NlVaccineAdministeredGgdGhorValue;
}
export interface NlVaccineAdministeredGgdGhorValue {
  reported: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineAdministeredGgd {
  values: NlVaccineAdministeredGgdValue[];
  last_value: NlVaccineAdministeredGgdValue;
}
export interface NlVaccineAdministeredGgdValue {
  estimated: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineAdministeredHospitalsAndCareInstitutions {
  values: NlVaccineAdministeredHospitalsAndCareInstitutionsValue[];
  last_value: NlVaccineAdministeredHospitalsAndCareInstitutionsValue;
}
export interface NlVaccineAdministeredHospitalsAndCareInstitutionsValue {
  estimated: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineAdministeredTotal {
  values: NlVaccineAdministeredTotalValue[];
  last_value: NlVaccineAdministeredTotalValue;
}
export interface NlVaccineAdministeredTotalValue {
  estimated: number;
  reported: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineAdministeredPlanned {
  values: NlVaccineAdministeredPlannedValue[];
  last_value: NlVaccineAdministeredPlannedValue;
}
export interface NlVaccineAdministeredPlannedValue {
  doses: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineCoveragePerAgeGroup {
  values: NlVaccineCoveragePerAgeGroupValue[];
}
export interface NlVaccineCoveragePerAgeGroupValue {
  age_group_range: "5-11" | "12-17" | "18-30" | "31-40" | "41-50" | "51-60" | "61-70" | "71-80" | "81+";
  age_group_percentage: number;
  age_group_total: number;
  fully_vaccinated: number;
  has_one_shot: number;
  booster_shot: number | null;
  fully_vaccinated_percentage: number;
  has_one_shot_percentage: number;
  booster_shot_percentage: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
  date_of_report_unix: number;
  birthyear_range: string;
}
export interface NlVaccineCoveragePerAgeGroupEstimatedValue {
  values: NlVaccineCoveragePerAgeGroupEstimated[];
  last_value: NlVaccineCoveragePerAgeGroupEstimated;
}
export interface NlVaccineCoveragePerAgeGroupEstimated {
  age_18_plus_fully_vaccinated: number;
  age_18_plus_has_one_shot: number;
  age_18_plus_birthyear: string;
  age_12_plus_fully_vaccinated: number;
  age_12_plus_has_one_shot: number;
  age_12_plus_birthyear: string;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface NlVaccineStock {
  values: NlVaccineStockValue[];
  last_value: NlVaccineStockValue;
}
export interface NlVaccineStockValue {
  total_available: number | null;
  total_not_available: number | null;
  bio_n_tech_pfizer_available: number | null;
  bio_n_tech_pfizer_not_available: number | null;
  bio_n_tech_pfizer_total: number | null;
  moderna_available: number | null;
  moderna_not_available: number | null;
  moderna_total: number | null;
  astra_zeneca_available: number | null;
  astra_zeneca_not_available: number | null;
  astra_zeneca_total: number | null;
  janssen_available: number | null;
  janssen_not_available: number | null;
  janssen_total: number | null;
  date_of_insertion_unix: number;
  date_unix: number;
}
export interface NlVariants {
  values: NlVariantsVariant[];
}
export interface NlVariantsVariant {
  name: string;
  values: NlVariantsVariantValue[];
  last_value: NlVariantsVariantValue;
}
export interface NlVariantsVariantValue {
  occurrence: number;
  percentage: number;
  is_variant_of_concern: boolean;
  has_historical_significance: boolean;
  sample_size: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}

export type VrCode = string;

export interface Vr {
  last_generated: string;
  proto_name: VrCode;
  name: VrCode;
  code: VrCode;
  static_values?: VrStaticValues;
  difference: VrDifference;
  g_number: VrGNumber;
  sewer: VrSewer;
  sewer_per_installation: VrSewerPerInstallation;
  tested_overall: VrTestedOverall;
  hospital_nice: VrHospitalNice;
  tested_ggd: VrTestedGgd;
  tested_ggd_archived: VrTestedGgdArchived;
  nursing_home: VrNursingHome;
  disability_care: VrDisabilityCare;
  behavior: VrBehavior;
  deceased_rivm: VrDeceasedRivm;
  deceased_cbs: VrDeceasedCbs;
  elderly_at_home: VrElderlyAtHome;
  tested_overall_sum: VrTestedOverallSum;
  hospital_nice_sum: VrHospitalNiceSum;
  situations: VrSituations;
  vaccine_coverage_per_age_group: VrVaccineCoveragePerAgeGroup;
  booster_coverage: VrBoosterCoverage;
}
export interface VrStaticValues {
  population_count: number;
}
export interface VrDifference {
  tested_overall__infected_per_100k_moving_average: DifferenceDecimal;
  tested_overall__infected_moving_average: DifferenceDecimal;
  tested_ggd__tested_total_moving_average: DifferenceDecimal;
  tested_ggd__infected_percentage_moving_average: DifferenceDecimal;
  hospital_nice__admissions_on_date_of_reporting_moving_average: DifferenceDecimal;
  sewer__average: DifferenceInteger;
  nursing_home__newly_infected_people: DifferenceInteger;
  nursing_home__infected_locations_total: DifferenceInteger;
  nursing_home__deceased_daily: DifferenceInteger;
  disability_care__newly_infected_people: DifferenceInteger;
  disability_care__infected_locations_total: DifferenceInteger;
  elderly_at_home__positive_tested_daily: DifferenceInteger;
  deceased_rivm__covid_daily: DifferenceInteger;
}
export interface DifferenceDecimal {
  old_value: number;
  difference: number;
  old_date_unix: number;
  new_date_unix: number;
}
export interface DifferenceInteger {
  old_value: number;
  difference: number;
  old_date_unix: number;
  new_date_unix: number;
}
export interface VrGNumber {
  values: VrGNumberValue[];
  last_value: VrGNumberValue;
}
export interface VrGNumberValue {
  g_number: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface VrSewer {
  values: VrSewerValue[];
  last_value: VrSewerValue;
}
export interface VrSewerValue {
  date_unix: number;
  average: number | null;
  date_of_insertion_unix: number;
}
export interface VrSewerPerInstallation {
  values: VrSewerPerInstallationInstallation[];
}
export interface VrSewerPerInstallationInstallation {
  rwzi_awzi_name: string;
  values: VrSewerPerInstallationValue[];
  last_value: VrSewerPerInstallationValue;
}
export interface VrSewerPerInstallationValue {
  date_unix: number;
  rna_normalized: number;
  date_of_insertion_unix: number;
}
export interface VrTestedOverall {
  values: VrTestedOverallValue[];
  last_value: VrTestedOverallValue;
}
export interface VrTestedOverallValue {
  date_unix: number;
  infected: number;
  infected_moving_average: number | null;
  infected_moving_average_rounded: number | null;
  infected_per_100k: number;
  infected_per_100k_moving_average: number | null;
  date_of_insertion_unix: number;
}
export interface VrHospitalNice {
  values: VrHospitalNiceValue[];
  last_value: VrHospitalNiceValue;
}
export interface VrHospitalNiceValue {
  admissions_on_date_of_admission: number;
  admissions_on_date_of_admission_moving_average: number | null;
  admissions_on_date_of_admission_moving_average_rounded: number | null;
  admissions_on_date_of_reporting: number;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface VrTestedGgd {
  values: VrTestedGgdValue[];
  last_value: VrTestedGgdValue;
}
export interface VrTestedGgdValue {
  infected: number;
  infected_moving_average: number | null;
  infected_percentage: number;
  infected_percentage_moving_average: number | null;
  tested_total: number;
  tested_total_moving_average: number | null;
  tested_total_moving_average_rounded: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface VrTestedGgdArchived {
  values: VrTestedGgdArchivedValue[];
  last_value: VrTestedGgdArchivedValue;
}
export interface VrTestedGgdArchivedValue {
  infected_percentage: number;
  infected_percentage_moving_average: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface VrNursingHome {
  values: VrNursingHomeValue[];
  last_value: VrNursingHomeValue;
}
export interface VrNursingHomeValue {
  newly_infected_people: number;
  newly_infected_people_moving_average: number | null;
  newly_infected_locations: number;
  infected_locations_total: number;
  infected_locations_percentage: number;
  deceased_daily: number;
  deceased_daily_moving_average: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface VrDisabilityCare {
  values: VrDisabilityCareValue[];
  last_value: VrDisabilityCareValue;
}
export interface VrDisabilityCareValue {
  newly_infected_people: number;
  newly_infected_people_moving_average: number | null;
  newly_infected_locations: number;
  infected_locations_total: number;
  infected_locations_percentage: number;
  deceased_daily: number;
  deceased_daily_moving_average: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface VrBehavior {
  values: VrBehaviorValue[];
  last_value: VrBehaviorValue;
}
export interface VrBehaviorValue {
  number_of_participants: number;
  curfew_compliance?: number | null;
  curfew_compliance_trend: ("up" | "down" | "equal") | null;
  wash_hands_compliance?: number | null;
  wash_hands_compliance_trend: ("up" | "down" | "equal") | null;
  keep_distance_compliance?: number | null;
  keep_distance_compliance_trend: ("up" | "down" | "equal") | null;
  work_from_home_compliance?: number | null;
  work_from_home_compliance_trend: ("up" | "down" | "equal") | null;
  avoid_crowds_compliance?: number | null;
  avoid_crowds_compliance_trend: ("up" | "down" | "equal") | null;
  wear_mask_public_indoors_compliance?: number | null;
  wear_mask_public_indoors_compliance_trend: ("up" | "down" | "equal") | null;
  sneeze_cough_elbow_compliance?: number | null;
  sneeze_cough_elbow_compliance_trend: ("up" | "down" | "equal") | null;
  max_visitors_compliance?: number | null;
  max_visitors_compliance_trend: ("up" | "down" | "equal") | null;
  ventilate_home_compliance?: number | null;
  ventilate_home_compliance_trend: ("up" | "down" | "equal") | null;
  selftest_visit_compliance?: number | null;
  selftest_visit_compliance_trend: ("up" | "down" | "equal") | null;
  curfew_support?: number | null;
  curfew_support_trend: ("up" | "down" | "equal") | null;
  wash_hands_support?: number | null;
  wash_hands_support_trend: ("up" | "down" | "equal") | null;
  keep_distance_support?: number | null;
  keep_distance_support_trend: ("up" | "down" | "equal") | null;
  work_from_home_support?: number | null;
  work_from_home_support_trend: ("up" | "down" | "equal") | null;
  avoid_crowds_support?: number | null;
  avoid_crowds_support_trend: ("up" | "down" | "equal") | null;
  wear_mask_public_indoors_support?: number | null;
  wear_mask_public_indoors_support_trend: ("up" | "down" | "equal") | null;
  sneeze_cough_elbow_support?: number | null;
  sneeze_cough_elbow_support_trend: ("up" | "down" | "equal") | null;
  max_visitors_support?: number | null;
  max_visitors_support_trend: ("up" | "down" | "equal") | null;
  ventilate_home_support?: number | null;
  ventilate_home_support_trend: ("up" | "down" | "equal") | null;
  selftest_visit_support?: number | null;
  selftest_visit_support_trend: ("up" | "down" | "equal") | null;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface VrDeceasedRivm {
  values: VrDeceasedRivmValue[];
  last_value: VrDeceasedRivmValue;
}
export interface VrDeceasedRivmValue {
  covid_daily: number;
  covid_daily_moving_average: number | null;
  covid_total: number;
  date_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface VrDeceasedCbs {
  values: VrDeceasedCbsValue[];
  last_value: VrDeceasedCbsValue;
}
export interface VrDeceasedCbsValue {
  registered: number;
  expected: number;
  expected_min: number;
  expected_max: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface VrElderlyAtHome {
  values: VrElderlyAtHomeValue[];
  last_value: VrElderlyAtHomeValue;
}
export interface VrElderlyAtHomeValue {
  positive_tested_daily: number;
  positive_tested_daily_moving_average: number | null;
  positive_tested_daily_per_100k: number;
  deceased_daily: number;
  deceased_daily_moving_average: number | null;
  date_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface VrTestedOverallSum {
  values: VrTestedOverallSumValue[];
  last_value: VrTestedOverallSumValue;
}
export interface VrTestedOverallSumValue {
  date_start_unix: number;
  date_end_unix: number;
  infected_per_100k: number;
  date_of_insertion_unix: number;
}
export interface VrHospitalNiceSum {
  values: VrHospitalNiceSumValue[];
  last_value: VrHospitalNiceSumValue;
}
export interface VrHospitalNiceSumValue {
  admissions_per_1m: number;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface VrSituations {
  values: VrSituationsValue[];
  last_value: VrSituationsValue;
}
export interface VrSituationsValue {
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
  has_sufficient_data: boolean;
  situations_known_percentage: number | null;
  situations_known_total: number | null;
  investigations_total: number | null;
  home_and_visits: number | null;
  work: number | null;
  school_and_day_care: number | null;
  health_care: number | null;
  gathering: number | null;
  travel: number | null;
  hospitality: number | null;
  other: number | null;
}
export interface VrVaccineCoveragePerAgeGroup {
  values: VrVaccineCoveragePerAgeGroupValue[];
}
export interface VrVaccineCoveragePerAgeGroupValue {
  age_group_range: "12+" | "18+";
  fully_vaccinated_percentage: number | null;
  has_one_shot_percentage: number | null;
  booster_shot_percentage: number | null;
  birthyear_range: string;
  fully_vaccinated_percentage_label: string | null;
  has_one_shot_percentage_label: string | null;
  booster_shot_percentage_label: string | null;
  date_unix: number;
  date_of_insertion_unix: number;
}
export interface VrBoosterCoverage {
  values: VrBoosterCoverageValue[];
}
export interface VrBoosterCoverageValue {
  age_group?: "12+" | "18+";
  percentage: number;
  percentage_label: string | null;
  date_unix: number;
  date_of_insertion_unix: number;
}

export type VrCollectionId = "VR_COLLECTION";

export interface VrCollection {
  last_generated: string;
  proto_name: VrCollectionId;
  name: VrCollectionId;
  code: VrCollectionId;
  hospital_nice: VrCollectionHospitalNice[];
  hospital_nice_choropleth: VrCollectionHospitalNice[];
  tested_overall: VrCollectionTestedOverall[];
  nursing_home: VrCollectionNursingHome[];
  sewer: VrCollectionSewer[];
  behavior: VrCollectionBehavior[];
  disability_care: VrCollectionDisabilityCare[];
  elderly_at_home: VrCollectionElderlyAtHome[];
  situations: VrCollectionSituations[];
  vaccine_coverage_per_age_group: VrCollectionVaccineCoveragePerAgeGroup[];
}
export interface VrCollectionHospitalNice {
  date_unix: number;
  vrcode: string;
  admissions_on_date_of_admission: number;
  admissions_on_date_of_admission_per_100000: number;
  admissions_on_date_of_reporting: number;
  date_of_insertion_unix: number;
}
export interface VrCollectionTestedOverall {
  date_unix: number;
  vrcode: string;
  infected_per_100k: number;
  infected: number;
  date_of_insertion_unix: number;
}
export interface VrCollectionNursingHome {
  newly_infected_people: number;
  newly_infected_locations: number;
  infected_locations_total: number;
  infected_locations_percentage: number;
  deceased_daily: number;
  date_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface VrCollectionSewer {
  date_unix: number;
  vrcode: string;
  average: number | null;
  date_of_insertion_unix: number;
}
export interface VrCollectionBehavior {
  vrcode: string;
  number_of_participants: number;
  curfew_compliance?: number | null;
  curfew_compliance_trend: ("up" | "down" | "equal") | null;
  wash_hands_compliance?: number | null;
  wash_hands_compliance_trend: ("up" | "down" | "equal") | null;
  keep_distance_compliance?: number | null;
  keep_distance_compliance_trend: ("up" | "down" | "equal") | null;
  work_from_home_compliance?: number | null;
  work_from_home_compliance_trend: ("up" | "down" | "equal") | null;
  avoid_crowds_compliance?: number | null;
  avoid_crowds_compliance_trend: ("up" | "down" | "equal") | null;
  wear_mask_public_indoors_compliance?: number | null;
  wear_mask_public_indoors_compliance_trend: ("up" | "down" | "equal") | null;
  sneeze_cough_elbow_compliance?: number | null;
  sneeze_cough_elbow_compliance_trend: ("up" | "down" | "equal") | null;
  max_visitors_compliance?: number | null;
  max_visitors_compliance_trend: ("up" | "down" | "equal") | null;
  ventilate_home_compliance?: number | null;
  ventilate_home_compliance_trend: ("up" | "down" | "equal") | null;
  curfew_support?: number | null;
  curfew_support_trend: ("up" | "down" | "equal") | null;
  wash_hands_support?: number | null;
  wash_hands_support_trend: ("up" | "down" | "equal") | null;
  keep_distance_support?: number | null;
  keep_distance_support_trend: ("up" | "down" | "equal") | null;
  work_from_home_support?: number | null;
  work_from_home_support_trend: ("up" | "down" | "equal") | null;
  avoid_crowds_support?: number | null;
  avoid_crowds_support_trend: ("up" | "down" | "equal") | null;
  wear_mask_public_indoors_support?: number | null;
  wear_mask_public_indoors_support_trend: ("up" | "down" | "equal") | null;
  sneeze_cough_elbow_support?: number | null;
  sneeze_cough_elbow_support_trend: ("up" | "down" | "equal") | null;
  max_visitors_support?: number | null;
  max_visitors_support_trend: ("up" | "down" | "equal") | null;
  ventilate_home_support?: number | null;
  ventilate_home_support_trend: ("up" | "down" | "equal") | null;
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
}
export interface VrCollectionDisabilityCare {
  newly_infected_people: number;
  newly_infected_locations: number;
  infected_locations_total: number;
  infected_locations_percentage: number;
  deceased_daily: number;
  date_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface VrCollectionElderlyAtHome {
  positive_tested_daily: number;
  positive_tested_daily_per_100k: number;
  deceased_daily: number;
  date_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
}
export interface VrCollectionSituations {
  date_start_unix: number;
  date_end_unix: number;
  date_of_insertion_unix: number;
  vrcode: string;
  has_sufficient_data: boolean;
  home_and_visits: number | null;
  work: number | null;
  school_and_day_care: number | null;
  health_care: number | null;
  gathering: number | null;
  travel: number | null;
  hospitality: number | null;
  other: number | null;
}
export interface VrCollectionVaccineCoveragePerAgeGroup {
  vrcode: string;
  age_group_range: "12+" | "18+";
  fully_vaccinated_percentage: number | null;
  has_one_shot_percentage: number | null;
  booster_shot_percentage: number | null;
  birthyear_range: string;
  fully_vaccinated_percentage_label: string | null;
  has_one_shot_percentage_label: string | null;
  booster_shot_percentage_label: string | null;
  date_unix: number;
  date_of_insertion_unix: number;
}
