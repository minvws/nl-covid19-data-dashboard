@import './variables.scss';

.container {
  display: flex;
  flex-direction: column-reverse;
  padding: 0 $default-padding;
}

@media (min-width: 768px) {
  .container {
    display: flex;
    flex-direction: row;
  }
}

@media (min-width: 992px) {
  .container {
    display: flex;
    flex-direction: row;
    max-width: 1200px;
    margin: auto;
  }
}

.home-content {
  padding: 0 $default-padding;
  max-width: 1200px;
  margin: 0 auto;
  margin-top: 1em;
}

.home-section {
  padding: ($default-margin * 4) 0;
  border-bottom: 1px solid $icon-color;

  &:first-of-type {
    padding-top: 0;
  }

  &:last-of-type {
    border: 0;
  }
}

.masonry-grid {
  display: flex;
  width: auto;
  margin-left: -$default-margin * 2;
}

.masonry-grid-column {
  padding-left: $default-margin * 2; /* gutter size */
  background-clip: padding-box;
}

/* Style your items */
.masonry-grid-column > .graphContainer,
.masonry-grid-column > .linkCard {
  /* change div to reference your elements you put in <Masonry> */
  margin-bottom: $default-margin * 2;
}

.map-article {
  background: transparent;
  padding: 0 2em 2em 2em;
  border-radius: 5px;
  margin: 0 -2rem;

  .map-container {
    max-width: 750px;
    height: 120vw;
    max-height: 960px;
    margin: 0 auto;
  }
}

.metric-article-header {
  display: flex;
  flex-direction: row;
  align-items: flex-start;

  div {
    margin-left: auto;
    margin-top: 0;
  }

  @media (max-width: 1000px) {
    flex-direction: column;
    div {
      margin-left: 0;
    }
  }
}

.index-article,
.metric-article {
  background: white;
  padding: 2em;
  border-radius: 5px;
  margin: 2rem -2rem 0;
  box-shadow: $box-shadow;

  .article-text {
    max-width: 30rem;
  }

  @media (min-width: 768px) {
    margin: 0;
    margin-top: 2rem;
  }

  /**
  Use this inside a column-item to stretch the contents so that the footer
  is pushed to the bottom.
  */
  .article-top {
    flex: 1 1 auto;
  }

  .article-footer {
    margin-top: 1em;
  }
}

.index-article:first-of-type() {
  margin-top: -1rem;
}

.escalation-article {
  background: white;
  padding: 2em;
  border-radius: 5px;
  margin: 0 -2rem;
  margin-top: 2rem;
  box-shadow: $box-shadow;
  display: flex;
  flex-direction: column;

  .article-text {
    max-width: 30rem;
  }

  @media (min-width: 768px) {
    margin: 0;
    margin-top: 2rem;
  }

  @media (min-width: 1200px) {
    flex-direction: row;
  }

  .column-item-no-margin {
    position: relative;
  }
}

/* Remove outline from programatically focussed elements. */
[tabindex='-1'] {
  outline: none;
}

.safety-region-aside,
.municipality-aside {
  min-height: 35em;

  [data-reach-combobox] {
    padding: 2em 1em;
    padding-bottom: 0;
  }
}

.national-layout,
.safety-region-layout,
.municipality-layout {
  /* will become display: flex at wider screens */
  display: block;
  flex-direction: column;
  margin-bottom: 2rem;

  .back-button {
    background: white;
    display: block;
    width: 100%;
    padding: 1em;
    box-shadow: $box-shadow;
    position: relative;
    z-index: 2;
    text-decoration: none;

    &.back-button-footer {
      background: none;
      box-shadow: none;
    }

    &:hover,
    &:focus {
      text-decoration: underline;
    }

    > svg {
      height: 10px;
      width: 16px;
      transform: rotate(90deg);
      margin-right: 0.7em;
    }
  }

  > aside {
    flex-basis: 100%;
  }
  > section {
    background: $page-background;
    padding: 2em;
    flex-basis: 100%;
    padding-top: 3rem;
  }

  .last-developments {
    li {
      min-height: 0;
    }
  }
}

@media (max-width: 999px) {
  .national-layout,
  .safety-region-layout,
  .municipality-layout {
    > section {
      padding-top: 0;
      margin-top: 2em;
    }

    .index-article {
      margin-top: 0;
    }
  }

  .safety-region-aside,
  .municipality-aside {
    min-height: 6em;
  }

  /**
   * Menu and content only show/hides with JavaScript enabled
   */
  .js {
    .has-menu-and-content-opened {
      .back-button {
        display: none;
      }
    }

    .has-menu-opened {
      .national-content,
      .safety-region-content,
      .municipality-content,
      .back-button {
        display: none;
      }
    }

    .has-menu-closed {
      .national-aside,
      .safety-region-aside,
      .municipality-aside {
        display: none;
      }
    }
  }

  // Tweaks to display the non-JS aside + content well
  html:not(.js) {
    .back-button {
      display: none;
    }

    .national-aside,
    .safety-region-aside,
    .municipality-aside {
      margin-bottom: 2em;
    }
  }
}

@media (min-width: 1000px) {
  .national-layout,
  .safety-region-layout,
  .municipality-layout {
    display: flex;
    flex-direction: row;

    & > aside {
      flex: 0 0 auto;
      width: 25em;
    }

    & > section {
      max-width: calc(100vw - 25em);
    }

    .back-button {
      display: none;
    }
  }
}

@media (min-width: 1400px) {
  .national-layout,
  .safety-region-layout,
  .municipality-layout {
    max-width: 1400px;
    margin: 0 auto 2rem;
    padding: 0 1em;
  }
}

@media (min-width: 1600px) {
  .national-layout,
  .safety-region-layout,
  .municipality-layout {
    & > section {
      max-width: 80em;
    }
  }
}

.national-aside,
.safety-region-aside,
.municipality-aside {
  background: white;
  box-shadow: 1px -1px 5px #e5e5e5, -1px -1px 5px #e5e5e5;
  z-index: 2;

  h2 {
    font-size: 1.42383rem;
    line-height: 1.40466;
    padding: 1rem;
    padding-bottom: 0.5rem;
    padding-top: 2rem;
  }

  ul {
    list-style: none;
    margin: 0;
    padding: 0;

    li {
      border-bottom: 1px solid #c4c4c4;
      min-height: 144px;

      &:first-child {
        border-top: 1px solid #c4c4c4;
      }
    }
  }

  .metric-wrapper > div:not(:first-child) {
    height: 3.5rem;
    margin-top: -1.25em;
  }
}

.region-names {
  h2 {
    padding-bottom: 0;
    margin-bottom: 0;
  }

  p {
    margin-top: 0;
    padding: 0 1rem 1rem;
  }
}

a.metric-link {
  display: block;
  padding: 1rem;
  border-right: 5px solid transparent;
  color: black;
  text-decoration: none;
  position: relative;

  &:hover {
    background: $page-background;
  }

  &:focus {
    background: $page-background-active;
  }

  h3 {
    margin-right: 1em;
  }

  &::after {
    content: '';
    background-image: url('/images/chevron.svg');
    // match aspect ratio of chevron.svg
    background-size: 0.6em 1.2em;
    height: 1.2em;
    width: 0.6em;
    display: block;
    position: absolute;
    right: 1em;
    top: 1.35em;
  }

  span {
    display: block;
    margin: 0 2.5rem;
  }

  &.last-developments-link {
    &::after {
      top: 1.15em;
    }
  }
}

.metric-not-available {
  padding: 1rem;
  color: $text-color-grey;

  svg {
    fill: currentColor;
    color: $text-color-grey !important;
  }

  p {
    margin-top: 0.5rem;
    margin-left: 2.5rem;
  }
}

@media (min-width: 1000px) {
  a.active-metric-link {
    background: $page-background-active;
    border-right: 5px solid $red;

    &::after {
      content: none;
    }
  }
}

@media (min-width: 1200px) {
  .layout-two-column {
    display: flex;
    flex-direction: row;

    .column-item-no-margin {
      margin: 0;
    }

    // in some cases a fixed column width is needed in order to make sure 'SSR-ed' charts render correctly:
    .column-item-fixed {
      flex: 0 0 50%;
      display: flex;
      flex-direction: column;
    }

    .column-item {
      flex: 1 1 50%;
      display: flex;
      flex-direction: column;
    }

    .column-item-small {
      flex: 1 1 10%;
      display: flex;
      flex-direction: column;
    }
  }

  .column-item {
    &:first-of-type {
      margin-right: $default-margin;
    }
  }

  .column-item-extra-margin {
    &:first-of-type {
      margin-right: $default-margin * 3;
    }
  }

  .column-item-no-margin {
    &:first-of-type {
      margin-right: 0;
    }
  }

  .layout-two-column-two-row {
    display: flex;
    flex-direction: column;

    .row-item {
      display: flex;

      .column-item {
        width: 50%;
      }
    }
  }
}

/**
  This layout should be integrated with the chloropleth component once we have
  one based on styled-components
  */
.layout-chloropleth {
  $chloropleth-breakpoint: 1200px;

  @media (min-width: $chloropleth-breakpoint) {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: auto auto 1fr auto;
    grid-template-areas:
      'w w'
      'a c'
      'b c'
      'd c';
  }

  .data-warning {
    grid-area: w;
  }

  .chloropleth-header {
    grid-area: a;
    margin-bottom: 2em;
    @media (min-width: $chloropleth-breakpoint) {
      margin-bottom: 0;
    }
  }

  .chloropleth-legend {
    grid-area: b;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }

  .chloropleth-chart {
    grid-area: c;
  }

  .chloropleth-controls {
    display: flex;
    justify-content: center;

    margin: 0 0 1rem;
    max-width: 100%;

    @media (min-width: $chloropleth-breakpoint) {
      justify-content: flex-start;
    }
  }

  .chloropleth-footer {
    grid-area: d;
  }
}
