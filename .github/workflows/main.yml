name: Main

on: pull_request

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous workflow
        uses: styfle/cancel-workflow-action@0.4.0
        with:
          access_token: ${{ github.token }}

  lint:
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Lookup cached node_modules
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install packages
        run: yarn install

      - name: Lint code
        run: yarn lint

  compile:
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: Get target branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_BASE_REF} | tr / -)" >> $GITHUB_ENV

      - name: Check out repository
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Lookup cached node_modules
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install packages
        run: yarn install

      - name: Build icon package
        run: yarn build:icons

      - name: Build common module
        run: yarn build:common

      - name: Import texts (develop)
        if: ${{ env.BRANCH_NAME != 'master' }}
        run: yarn cms:lokalize-import --clean-json

      - name: Import texts (production)
        if: ${{ env.BRANCH_NAME == 'master' }}
        run: yarn cms:lokalize-import:prd --clean-json

      - name: Typecheck all code
        run: yarn typecheck

  test:
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Lookup cached node_modules
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install packages
        run: yarn install

      - name: Build common module
        run: yarn build:common

      - name: Build icons module
        run: yarn build:icons

      - name: Export texts
        run: yarn cms:lokalize-import --clean-json

      - name: Run tests
        run: yarn test:ci
